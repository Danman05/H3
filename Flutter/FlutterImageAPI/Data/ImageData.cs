using FlutterImageAPI.Models;

namespace FlutterImageAPI.Data
{
    public class ImageData
    {
        // Thread safe singleton

        private static readonly object obj = new object ();
        private static ImageData? instance = null;


        public static List<ImageModel> Images = new List<ImageModel>()
        {
                new ImageModel {Base64 = ""}
        };
        public static ImageData Instance
        {
            get
            {
                lock (obj)
                    {
                        if (instance == null)
                        {
                            instance = new ImageData();
                        }
                        return instance;
                    }
            }
        }
        public int ImageLength => Images.Count;
    }
}
